{"project": "bottleneck", "project_url": "http://github.com/pydata/bottleneck", "show_commit_url": "http://github.com/pydata/bottleneck/commit/", "hash_length": 8, "revision_to_hash": {"40": "0d438520e53b597cba7d6884886d150ab7104b1b", "74": "8e0919bcc6dc61889978cd66bba6191a1b955b45", "103": "91672d51a471e422cff00e069092389addff2884", "116": "de72a87a1a67130e418f18bd7c4d80cc5102a67c", "118": "7dc66555db874b6f8ce1022bf6783d62c24448ec", "119": "9ceef4a57d67e6c9be89c0d309e0f951b5b77851", "127": "8590d817be0901b06e3bf2ab53310c157a0c13bc", "150": "6674590e8644b0f3bdb8f1a810db707b60336e02", "151": "857049cb99d2a2ee4c8e9693e3b7415ded7a95f9", "153": "78d6ae73ad959d3a0a35b8bd74e23d7c940c55a5", "156": "60601669aba18d3f0b3da9f46d01ab4c16a660d8", "157": "c32957fd27f3be937cdf1f9b559936794f2b287c", "158": "5a2ad3bbbea4285d7f4c14bc1981061d30f27eab", "197": "53498afb6afaea616c4068a5ec82a21bd8e90081", "202": "bde3b78a51947fa42d6c9605a67abe789da935ce", "244": "4042977fa716f127a2074de011b9ef84caf2e965", "264": "7df83fdbde8504f9a572ce4aea638eb1cdd704ab", "491": "93061e6025dcefd1aef959b10e6c31caac105fcf", "712": "1a0512e95795357038de4c2db030a3e3e7b84953", "939": "4c8cdeacd3a94e69b66c485ecf66940705cee093", "980": "559e4c9d96e0507900c41830b20a2f0e055b2f75", "991": "d2e43df4c6988e1d3d3928259e008ba48c3e63de", "1011": "104778a8dea49d0ca230288b5011c17979c4ac99", "1012": "ac1c7f91ba028f8d24419463dec1ad7fb28af202", "1018": "f5284be5b20097dab7c2c4a03ea5fa8235b01126", "1055": "54b4006764fa3927baaa50ef10d3c42f9dd10a4d", "1136": "f9fdd53287c04e93e3a584d68f9499f1815c9e51", "1159": "22657acaad5f27d9f692dd64362439ada8032c1b", "1168": "03da29ba6337d9a13b3d0369215f54c6c2bb684b", "1171": "5199ec1cc8f0652466057ad6e7fabd21abbcfe39", "1230": "1277951d97c286c816f9abfeaf79a51911fc2eee", "1234": "4a4b695b3c2cd05d1b963b46817282fc55238861", "1274": "108ccf508071abc8dc166c18960a68a56f3d83ab", "1287": "59af7eebd6e33fc1984402338f8d6a3d36a7a90b", "1313": "c6401d655b72543dcec3f61c4e575305543349c7", "1326": "7d85c519478f8df5d874ada715d6b71348e675e7", "1330": "c5dee5f60b5880cba98024bf4c538477a7556a2d", "1337": "3589557267031d97611c49287c0daf7ac7cf4bd2", "1342": "042632b5686b36cd791afa36612fe53a9214dc99", "1346": "c3a87a4cebf879c9fae66881e7dd4890554059c9", "1349": "7ac20de1e816006f765ede2c74a49748aefd7360", "1352": "b6742ac000690a83747505f68165b3af89d61dca", "1357": "c5720c8d66882f9d92f6ec0a73bbd8ccbfe1c013", "1359": "2e1b7cb881ba3338ace2453f831eb2bdcba16ac5", "1361": "b556e27c9aef1b28943761653df537b5c50f8fd0", "1362": "f82a38b5c017b5825a294ed6f5cd0ed9039dd4ab", "1395": "7059190517159c97fcc5001fff220f159b09155b", "1409": "58b0bc8498391fecc38d971ee38080886b386421", "1412": "b439de0f796a6d40583797275267c8c892848599", "1413": "9d075d3713ac6a454b2a3432901c8231bab1d6df", "1417": "0f98ba25bac55c104021cafa26c57c19516fbc10", "1419": "eaf2bb00a0fe8c6fc09b700cdb000b783478cea4", "1441": "962e227309d5be5fcd7eb21804156ad5265a7698", "1456": "b3966e18afba85ffbbc1b14a4dfa1158661dc6f6", "1458": "43fc9911bc6c17cf2afcce842277cd6e8a741bf4", "1460": "595cdfd1965421f13baf7c6b3c18e18f9b019423", "1463": "41ccd3c0751f6ff48d25ccd055a6419a682c0bb8", "1486": "cfc7bac14fb2549efe68b61502dd280453756037", "1492": "608365312c7c284e12f065db296bc2554b91b06c", "1494": "cad862ccb445c8a03ff6038f56737665ce9e0ff6", "1495": "3254a332b77f068fe3b9fb66c961d115f654847e", "1500": "ca8f3efe9aabcbd8389700a166bea74fd0670ea9", "1501": "8df19cc13a02e9fcad1d155d55a8cc80f4e1c2b8", "1505": "61eea5ab5f8fdca522c7b56b9d3c2233c52feb3f", "1506": "7caa10974c9aa2b9dfb1f2fcff570bb618636d0b", "1507": "757157396ede9f00c123d952e0e1b440ccadf332", "1508": "cd726347a928a385ddee770b805e8b2d9c854323", "1509": "96a81e7edbe9c00f3a712a42249cd5711e58b20e", "1510": "2bb0a0546578f938fa10b4c75dae99b89444fc4e", "1512": "d39c088abce6679bc9be0b44963221931d88d136", "1513": "7a18a0c58f586eb6e66df9801be977cf1fb5aa51", "1514": "d21a6f27e5a7671d078e3175a2916596c4ecb95e", "1515": "d22e0e56c29a6a493c7b09b74b6c5d0b2185a91d", "1516": "488af0d14193464ad56bfd7f3764e799cacdb5b9", "1517": "2f8cc295faa3be9a587bfa02b56b39b5c6a84b89", "1518": "2c29d28aa3177f6d77f443cd0686cae35c3c08a3", "1519": "38863569746e43e98cc762b4091fbec375d99506", "1520": "e815f653447b106f56442999a26732f3d0039bc1", "1521": "304991b44fbdba7ef1a64a4d9d8757783b8c2c3e", "1522": "e4846b42df5921d1d96443f7c5d0eaad01995e3f", "1526": "17f7e96f2b4688ced5245c4ade6f72d27576616d", "1528": "7ac219a044c429b7b9e74113dd87bf6a7865aea9", "1529": "e0d30c10b59f9ca852ae3f27e94fdb3a8322f784", "1530": "8b587c5ce7bedd1be65fc821f99158aaea92212a", "1531": "f1d14dc2fcdbaa6cf900b479b8cfd2b842fa3433", "1566": "8d980f44c7a2b01153e7d36cf16a5f3543fde3c6", "1567": "7d3c568a2038631b7aa04503567069aa102a2b54", "1642": "1401c5335381ca6235cdb8d989832015b8c27488", "1654": "abe2dee046a1f2e13b6878c893640b17eed6d46c", "1661": "f9fc0989b74a6fdb1513fcb3b226041433b618bf"}, "revision_to_date": {"40": 1291220671000, "74": 1293478964000, "103": 1295480348000, "116": 1299603348000, "118": 1299617138000, "119": 1299624172000, "127": 1300380548000, "150": 1307211359000, "151": 1307232104000, "153": 1307413520000, "156": 1307747752000, "157": 1307749917000, "158": 1307999708000, "197": 1337808375000, "202": 1338828105000, "244": 1378829179000, "264": 1390328677000, "491": 1423239754000, "712": 1466618955000, "939": 1475532038000, "980": 1476979914000, "991": 1485701438000, "1011": 1494865747000, "1012": 1494950261000, "1018": 1496680287000, "1055": 1552059101000, "1136": 1566794398000, "1159": 1568001603000, "1168": 1568488259000, "1171": 1568494403000, "1230": 1569185663000, "1234": 1569188827000, "1274": 1569796859000, "1287": 1571001628000, "1313": 1572122617000, "1326": 1572072335000, "1330": 1572734409000, "1337": 1572744793000, "1342": 1573336699000, "1346": 1573619020000, "1349": 1574139056000, "1352": 1575157289000, "1357": 1575801268000, "1359": 1575771390000, "1361": 1575799062000, "1362": 1575802409000, "1395": 1576824117000, "1409": 1575796278000, "1412": 1577849540000, "1413": 1577850928000, "1417": 1575158501000, "1419": 1577856657000, "1441": 1577924476000, "1456": 1577920561000, "1458": 1577928220000, "1460": 1577940640000, "1463": 1578884624000, "1486": 1579937971000, "1492": 1576920232000, "1494": 1580099039000, "1495": 1580625112000, "1500": 1580032495000, "1501": 1581510514000, "1505": 1581800055000, "1506": 1581813924000, "1507": 1578892675000, "1508": 1581828467000, "1509": 1581830041000, "1510": 1581831156000, "1512": 1581820874000, "1513": 1581832695000, "1514": 1581833355000, "1515": 1581834011000, "1516": 1581835768000, "1517": 1581834209000, "1518": 1581834539000, "1519": 1581834552000, "1520": 1581835184000, "1521": 1581835198000, "1522": 1581838671000, "1526": 1582265763000, "1528": 1582265763000, "1529": 1582360500000, "1530": 1582403599000, "1531": 1582441207000, "1566": 1585436615000, "1567": 1585981937000, "1642": 1606009234000, "1654": 1606165879000, "1661": 1606165879000}, "params": {"arch": ["x86_64"], "cpu": ["Intel(R) Core(TM) i7-7500U CPU @ 2.70GHz"], "machine": ["T470"], "num_cpu": ["4"], "os": ["Linux 5.3.0-24-generic"], "ram": ["20261336"], "python": ["3.7"], "numpy": ["1.16"], "hypothesis": ["", null], "env-CC": ["clang-9", "gcc-7", "gcc-8", "gcc-9"], "env-CXX": ["clang++-9", "g++-7", "g++-8", "g++-9"], "branch": ["master"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-7500U CPU @ 2.70GHz", "machine": "T470", "num_cpu": "4", "os": "Linux 5.3.0-24-generic", "ram": "20261336", "python": "3.7", "numpy": "1.16", "env-CC": "gcc-7", "env-CXX": "g++-7", "branch": "master", "hypothesis": null}, {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-7500U CPU @ 2.70GHz", "machine": "T470", "num_cpu": "4", "os": "Linux 5.3.0-24-generic", "ram": "20261336", "python": "3.7", "numpy": "1.16", "env-CC": "clang-9", "env-CXX": "clang++-9", "branch": "master", "hypothesis": null}, {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-7500U CPU @ 2.70GHz", "machine": "T470", "num_cpu": "4", "os": "Linux 5.3.0-24-generic", "ram": "20261336", "python": "3.7", "numpy": "1.16", "env-CC": "gcc-9", "env-CXX": "g++-9", "branch": "master", "hypothesis": null}, {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-7500U CPU @ 2.70GHz", "machine": "T470", "num_cpu": "4", "os": "Linux 5.3.0-24-generic", "ram": "20261336", "python": "3.7", "numpy": "1.16", "env-CC": "gcc-8", "env-CXX": "g++-8", "branch": "master", "hypothesis": null}, {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-7500U CPU @ 2.70GHz", "machine": "T470", "num_cpu": "4", "os": "Linux 5.3.0-24-generic", "ram": "20261336", "python": "3.7", "numpy": "1.16", "hypothesis": "", "env-CC": "gcc-9", "env-CXX": "g++-9", "branch": "master"}], "benchmarks": {"memory.Memory.peakmem_nanmedian": {"code": "class Memory:\n    def peakmem_nanmedian(self):\n        arr = np.arange(1).reshape((1, 1))\n        for i in range(1000000):\n            bn.nanmedian(arr)", "name": "memory.Memory.peakmem_nanmedian", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "fa79824e5336c67d8c37c1d4fc86917f3a8aecca8d68ba2c3091f7fbcc77501c"}, "move.Time1DMove.time_move_argmax": {"code": "class Time1DMove:\n    def time_move_argmax(self, dtype, shape, window):\n        bn.move_argmax(self.arr, window)\n\n    def setup(self, dtype, shape, window):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "move.Time1DMove.time_move_argmax", "number": 0, "param_names": ["dtype", "shape", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "7e35127c06626cd41e5e030fa9b636006e60f02dd4339ef4155f6435bbfcd8f2", "warmup_time": -1}, "move.Time1DMove.time_move_argmin": {"code": "class Time1DMove:\n    def time_move_argmin(self, dtype, shape, window):\n        bn.move_argmin(self.arr, window)\n\n    def setup(self, dtype, shape, window):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "move.Time1DMove.time_move_argmin", "number": 0, "param_names": ["dtype", "shape", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "d6b029d470ced7915f9a7f16cf62771d5aaefecbe64acc9800e9cc2caf1ea27b", "warmup_time": -1}, "move.Time1DMove.time_move_max": {"code": "class Time1DMove:\n    def time_move_max(self, dtype, shape, window):\n        bn.move_max(self.arr, window)\n\n    def setup(self, dtype, shape, window):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "move.Time1DMove.time_move_max", "number": 0, "param_names": ["dtype", "shape", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ac7adad27b050f8574ab32cf9d10e099e114eec4cdb2df6e358127523fd443ca", "warmup_time": -1}, "move.Time1DMove.time_move_mean": {"code": "class Time1DMove:\n    def time_move_mean(self, dtype, shape, window):\n        bn.move_mean(self.arr, window)\n\n    def setup(self, dtype, shape, window):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "move.Time1DMove.time_move_mean", "number": 0, "param_names": ["dtype", "shape", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ba817e53a51a47b29637935f1bf8c84bdc85d1e6782aa4a7d71f31ec74c2f739", "warmup_time": -1}, "move.Time1DMove.time_move_median": {"code": "class Time1DMove:\n    def time_move_median(self, dtype, shape, window):\n        bn.move_median(self.arr, window)\n\n    def setup(self, dtype, shape, window):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "move.Time1DMove.time_move_median", "number": 0, "param_names": ["dtype", "shape", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "11abb6b4d9b58dba7bc44fae10a07e8a9d7daf9d22e6493bdf770fda079deb20", "warmup_time": -1}, "move.Time1DMove.time_move_min": {"code": "class Time1DMove:\n    def time_move_min(self, dtype, shape, window):\n        bn.move_min(self.arr, window)\n\n    def setup(self, dtype, shape, window):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "move.Time1DMove.time_move_min", "number": 0, "param_names": ["dtype", "shape", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "c0d1a564838c5110ef6e1d9f98ef8efdb7440ae5505b800aac4bfda7764f84af", "warmup_time": -1}, "move.Time1DMove.time_move_rank": {"code": "class Time1DMove:\n    def time_move_rank(self, dtype, shape, window):\n        bn.move_rank(self.arr, window)\n\n    def setup(self, dtype, shape, window):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "move.Time1DMove.time_move_rank", "number": 0, "param_names": ["dtype", "shape", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "627d9d8be0e2df6c403a70d321068630fdfdbbbcd3d8e7595da9ed95e63f8024", "warmup_time": -1}, "move.Time1DMove.time_move_std": {"code": "class Time1DMove:\n    def time_move_std(self, dtype, shape, window):\n        bn.move_std(self.arr, window)\n\n    def setup(self, dtype, shape, window):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "move.Time1DMove.time_move_std", "number": 0, "param_names": ["dtype", "shape", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "1de0109d3bfded1ed7df6c854a752115632359fec1b8340e0919f15d654a5191", "warmup_time": -1}, "move.Time1DMove.time_move_sum": {"code": "class Time1DMove:\n    def time_move_sum(self, dtype, shape, window):\n        bn.move_sum(self.arr, window)\n\n    def setup(self, dtype, shape, window):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "move.Time1DMove.time_move_sum", "number": 0, "param_names": ["dtype", "shape", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "9e0912eacd69e79a5d7130487dd3024074d9a8886a1820b46f19ef1363c1debb", "warmup_time": -1}, "move.Time1DMove.time_move_var": {"code": "class Time1DMove:\n    def time_move_var(self, dtype, shape, window):\n        bn.move_var(self.arr, window)\n\n    def setup(self, dtype, shape, window):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "move.Time1DMove.time_move_var", "number": 0, "param_names": ["dtype", "shape", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "1ac8035db5a5cbf66b6d8eab9c57b072e6b8eae58c8eaef86f9168feafdd215d", "warmup_time": -1}, "move.Time2DMove.time_move_argmax": {"code": "class Time2DMove:\n    def time_move_argmax(self, dtype, shape, order, axis, window):\n        bn.move_argmax(self.arr, window, axis=axis)\n\n    def setup(self, dtype, shape, order, axis, window):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "move.Time2DMove.time_move_argmax", "number": 0, "param_names": ["dtype", "shape", "order", "axis", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["0", "1"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "0cb4ad5db8e9db4fb9f590d7f471daff425eb89f05f757b0e976e36edbb437dd", "warmup_time": -1}, "move.Time2DMove.time_move_argmin": {"code": "class Time2DMove:\n    def time_move_argmin(self, dtype, shape, order, axis, window):\n        bn.move_argmin(self.arr, window, axis=axis)\n\n    def setup(self, dtype, shape, order, axis, window):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "move.Time2DMove.time_move_argmin", "number": 0, "param_names": ["dtype", "shape", "order", "axis", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["0", "1"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "46ce3571d269a430001cdcf394f1ac530116d03571617fa96ad9dc5d0220459e", "warmup_time": -1}, "move.Time2DMove.time_move_max": {"code": "class Time2DMove:\n    def time_move_max(self, dtype, shape, order, axis, window):\n        bn.move_max(self.arr, window, axis=axis)\n\n    def setup(self, dtype, shape, order, axis, window):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "move.Time2DMove.time_move_max", "number": 0, "param_names": ["dtype", "shape", "order", "axis", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["0", "1"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "1b3a44c89e6e32c2f806d8a8f1181ec19f0e754b4a771bb114a54e5cb5554f8f", "warmup_time": -1}, "move.Time2DMove.time_move_mean": {"code": "class Time2DMove:\n    def time_move_mean(self, dtype, shape, order, axis, window):\n        bn.move_mean(self.arr, window, axis=axis)\n\n    def setup(self, dtype, shape, order, axis, window):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "move.Time2DMove.time_move_mean", "number": 0, "param_names": ["dtype", "shape", "order", "axis", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["0", "1"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "73505cf685e1c74197f7f67b116bb3340f4e343abbb0b27229d61931427c25b4", "warmup_time": -1}, "move.Time2DMove.time_move_median": {"code": "class Time2DMove:\n    def time_move_median(self, dtype, shape, order, axis, window):\n        bn.move_median(self.arr, window, axis=axis)\n\n    def setup(self, dtype, shape, order, axis, window):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "move.Time2DMove.time_move_median", "number": 0, "param_names": ["dtype", "shape", "order", "axis", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["0", "1"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "9d3397d5905677302c5f3e7e9a780d7f3da3094a862c33ceba711b2c061fc77c", "warmup_time": -1}, "move.Time2DMove.time_move_min": {"code": "class Time2DMove:\n    def time_move_min(self, dtype, shape, order, axis, window):\n        bn.move_min(self.arr, window, axis=axis)\n\n    def setup(self, dtype, shape, order, axis, window):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "move.Time2DMove.time_move_min", "number": 0, "param_names": ["dtype", "shape", "order", "axis", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["0", "1"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "08e5166ba8f444ae8fd61fa8da2ba20684e1e45ecd587bef39a77088723f0395", "warmup_time": -1}, "move.Time2DMove.time_move_rank": {"code": "class Time2DMove:\n    def time_move_rank(self, dtype, shape, order, axis, window):\n        bn.move_rank(self.arr, window, axis=axis)\n\n    def setup(self, dtype, shape, order, axis, window):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "move.Time2DMove.time_move_rank", "number": 0, "param_names": ["dtype", "shape", "order", "axis", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["0", "1"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "a4ccc80764a84dbb3960272bb592c0b935346471e606f0818b65a5b5f21cbe8a", "warmup_time": -1}, "move.Time2DMove.time_move_std": {"code": "class Time2DMove:\n    def time_move_std(self, dtype, shape, order, axis, window):\n        bn.move_std(self.arr, window, axis=axis)\n\n    def setup(self, dtype, shape, order, axis, window):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "move.Time2DMove.time_move_std", "number": 0, "param_names": ["dtype", "shape", "order", "axis", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["0", "1"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "29dc3df6a15d07a2075ac0e0acb9e3b0ba7b23b100cdd260218e5427392f115e", "warmup_time": -1}, "move.Time2DMove.time_move_sum": {"code": "class Time2DMove:\n    def time_move_sum(self, dtype, shape, order, axis, window):\n        bn.move_sum(self.arr, window, axis=axis)\n\n    def setup(self, dtype, shape, order, axis, window):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "move.Time2DMove.time_move_sum", "number": 0, "param_names": ["dtype", "shape", "order", "axis", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["0", "1"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "b1ba0bb8aa3816da910bb63f057a2f3fe94292fe2ea49fb4fe65ad1d37631f2c", "warmup_time": -1}, "move.Time2DMove.time_move_var": {"code": "class Time2DMove:\n    def time_move_var(self, dtype, shape, order, axis, window):\n        bn.move_var(self.arr, window, axis=axis)\n\n    def setup(self, dtype, shape, order, axis, window):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "move.Time2DMove.time_move_var", "number": 0, "param_names": ["dtype", "shape", "order", "axis", "window"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["0", "1"], ["10"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "61e14e2c81403ac6c30b08a0070e9df08e3b6809c2091dcda8bb18082514a829", "warmup_time": -1}, "nonreduce.TimeReplace2D.time_replace": {"code": "class TimeReplace2D:\n    def time_replace(self, dtype, shape, order):\n        bn.replace(self.arr, self.old, self.new)\n\n    def setup(self, dtype, shape, order):\n        self.arr = np.full(shape, 0, dtype=dtype, order=order)\n    \n        assert self.arr.flags[order + \"_CONTIGUOUS\"]\n    \n        self.old = 0\n        self.new = 1", "min_run_count": 2, "name": "nonreduce.TimeReplace2D.time_replace", "number": 0, "param_names": ["dtype", "shape", "order"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "1018880e5862cd40c891af8d0e70a06f67d5a54a0aa76de8deed2493564dbd5b", "warmup_time": -1}, "nonreduce_axis.Time1DNonreduceAxis.time_argpartition": {"code": "class Time1DNonreduceAxis:\n    def time_argpartition(self, dtype, shape):\n        bn.argpartition(self.arr, self.half)\n\n    def setup(self, dtype, shape):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")\n        self.half = shape[0] // 2", "min_run_count": 2, "name": "nonreduce_axis.Time1DNonreduceAxis.time_argpartition", "number": 0, "param_names": ["dtype", "shape"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ff08bab3d8eefaa0e96f7db88f7170f6072eefd12010e460c58a6ac82d850775", "warmup_time": -1}, "nonreduce_axis.Time1DNonreduceAxis.time_nanrankdata": {"code": "class Time1DNonreduceAxis:\n    def time_nanrankdata(self, dtype, shape):\n        bn.nanrankdata(self.arr)\n\n    def setup(self, dtype, shape):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")\n        self.half = shape[0] // 2", "min_run_count": 2, "name": "nonreduce_axis.Time1DNonreduceAxis.time_nanrankdata", "number": 0, "param_names": ["dtype", "shape"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "95019634c25e6021dcc801de88601664c7fb6945f18e937cc268d8a11deca611", "warmup_time": -1}, "nonreduce_axis.Time1DNonreduceAxis.time_partition": {"code": "class Time1DNonreduceAxis:\n    def time_partition(self, dtype, shape):\n        bn.partition(self.arr, self.half)\n\n    def setup(self, dtype, shape):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")\n        self.half = shape[0] // 2", "min_run_count": 2, "name": "nonreduce_axis.Time1DNonreduceAxis.time_partition", "number": 0, "param_names": ["dtype", "shape"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "7fb8b96e6771982522a33e8ea99fb80c0833fadc4bfc14a3ce21fae47c6609fc", "warmup_time": -1}, "nonreduce_axis.Time1DNonreduceAxis.time_push": {"code": "class Time1DNonreduceAxis:\n    def time_push(self, dtype, shape):\n        bn.push(self.arr)\n\n    def setup(self, dtype, shape):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")\n        self.half = shape[0] // 2", "min_run_count": 2, "name": "nonreduce_axis.Time1DNonreduceAxis.time_push", "number": 0, "param_names": ["dtype", "shape"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "e3623706d2c0bf8651f358c9853e9423fa4e91a10bec778e5dbd422ae20384f0", "warmup_time": -1}, "nonreduce_axis.Time1DNonreduceAxis.time_rankdata": {"code": "class Time1DNonreduceAxis:\n    def time_rankdata(self, dtype, shape):\n        bn.rankdata(self.arr)\n\n    def setup(self, dtype, shape):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")\n        self.half = shape[0] // 2", "min_run_count": 2, "name": "nonreduce_axis.Time1DNonreduceAxis.time_rankdata", "number": 0, "param_names": ["dtype", "shape"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "3393f85c0211b0368a44870af5f8327d54b4b75afa9e65fd01f3f43a389297ec", "warmup_time": -1}, "reduce.Time1DReductions.time_median": {"code": "class Time1DReductions:\n    def time_median(self, dtype, shape):\n        bn.median(self.arr)\n\n    def setup(self, dtype, shape):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "reduce.Time1DReductions.time_median", "number": 0, "param_names": ["dtype", "shape"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "d22a9eb32a85ad18ccb1c87b5f4115a3bfec00f3c9aad766d7c730184f771283", "warmup_time": -1}, "reduce.Time1DReductions.time_nanargmax": {"code": "class Time1DReductions:\n    def time_nanargmax(self, dtype, shape):\n        bn.nanargmax(self.arr)\n\n    def setup(self, dtype, shape):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "reduce.Time1DReductions.time_nanargmax", "number": 0, "param_names": ["dtype", "shape"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "723a4f4a556342effad11eb0ce7963983009c7559431222e5217405b4e8304bf", "warmup_time": -1}, "reduce.Time1DReductions.time_nanargmin": {"code": "class Time1DReductions:\n    def time_nanargmin(self, dtype, shape):\n        bn.nanargmin(self.arr)\n\n    def setup(self, dtype, shape):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "reduce.Time1DReductions.time_nanargmin", "number": 0, "param_names": ["dtype", "shape"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "166f8fb97327d94eca45c6c3f8eda620f1e9db2eed01fa12459cbc4f0d6f4419", "warmup_time": -1}, "reduce.Time1DReductions.time_nanmax": {"code": "class Time1DReductions:\n    def time_nanmax(self, dtype, shape):\n        bn.nanmin(self.arr)\n\n    def setup(self, dtype, shape):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "reduce.Time1DReductions.time_nanmax", "number": 0, "param_names": ["dtype", "shape"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "831e4463e06e12bc8df7bc17c01e51a0fffa2e99236b1938d260f7e6f3ee0f8b", "warmup_time": -1}, "reduce.Time1DReductions.time_nanmean": {"code": "class Time1DReductions:\n    def time_nanmean(self, dtype, shape):\n        bn.nanmean(self.arr)\n\n    def setup(self, dtype, shape):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "reduce.Time1DReductions.time_nanmean", "number": 0, "param_names": ["dtype", "shape"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ef7a69de354cf24376a928ff047f89b0f324f272f065b8f981ff9c116013081f", "warmup_time": -1}, "reduce.Time1DReductions.time_nanmedian": {"code": "class Time1DReductions:\n    def time_nanmedian(self, dtype, shape):\n        bn.nanmedian(self.arr)\n\n    def setup(self, dtype, shape):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "reduce.Time1DReductions.time_nanmedian", "number": 0, "param_names": ["dtype", "shape"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "f0b26fd959b06765f70c3317c0337ba72a348c2efe6ef97d737f20a5abbece5b", "warmup_time": -1}, "reduce.Time1DReductions.time_nanmin": {"code": "class Time1DReductions:\n    def time_nanmin(self, dtype, shape):\n        bn.nanmin(self.arr)\n\n    def setup(self, dtype, shape):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "reduce.Time1DReductions.time_nanmin", "number": 0, "param_names": ["dtype", "shape"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "0ef9d6eb088af95b8314f3e2d132098621117e907d15b972867a7212c50a7d62", "warmup_time": -1}, "reduce.Time1DReductions.time_nanstd": {"code": "class Time1DReductions:\n    def time_nanstd(self, dtype, shape):\n        bn.nanstd(self.arr)\n\n    def setup(self, dtype, shape):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "reduce.Time1DReductions.time_nanstd", "number": 0, "param_names": ["dtype", "shape"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "7b246ef2f958540f4d128eb74d2590d01e5f5ea0373ddbc7776b089b4e05270a", "warmup_time": -1}, "reduce.Time1DReductions.time_nansum": {"code": "class Time1DReductions:\n    def time_nansum(self, dtype, shape):\n        bn.nansum(self.arr)\n\n    def setup(self, dtype, shape):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "reduce.Time1DReductions.time_nansum", "number": 0, "param_names": ["dtype", "shape"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "59a592266302d6a3bcfbf5859fe56fa569168d801e77d1399db950915fed7c21", "warmup_time": -1}, "reduce.Time1DReductions.time_nanvar": {"code": "class Time1DReductions:\n    def time_nanvar(self, dtype, shape):\n        bn.nanvar(self.arr)\n\n    def setup(self, dtype, shape):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "reduce.Time1DReductions.time_nanvar", "number": 0, "param_names": ["dtype", "shape"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "64b00fc5dc36e310240955e1faaa00bcb42b506a9b0c712bcd0076c613c75a9d", "warmup_time": -1}, "reduce.Time1DReductions.time_ss": {"code": "class Time1DReductions:\n    def time_ss(self, dtype, shape):\n        bn.ss(self.arr)\n\n    def setup(self, dtype, shape):\n        self.arr = get_cached_rand_array(shape, dtype, \"C\")", "min_run_count": 2, "name": "reduce.Time1DReductions.time_ss", "number": 0, "param_names": ["dtype", "shape"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000,)", "(100000,)", "(10000000,)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "b981a6abbafbe8d98a87030bd462810db7c5b5702bce5897829b1a9b9a10bc96", "warmup_time": -1}, "reduce.Time2DReductions.time_median": {"code": "class Time2DReductions:\n    def time_median(self, dtype, shape, order, axis):\n        bn.median(self.arr, axis=axis)\n\n    def setup(self, dtype, shape, order, axis):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "reduce.Time2DReductions.time_median", "number": 0, "param_names": ["dtype", "shape", "order", "axis"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["None", "0", "1"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "559c431700d906f906cd15178334c408b5b13b3eca6952d530ace41420d45f2f", "warmup_time": -1}, "reduce.Time2DReductions.time_nanargmax": {"code": "class Time2DReductions:\n    def time_nanargmax(self, dtype, shape, order, axis):\n        bn.nanargmax(self.arr, axis=axis)\n\n    def setup(self, dtype, shape, order, axis):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "reduce.Time2DReductions.time_nanargmax", "number": 0, "param_names": ["dtype", "shape", "order", "axis"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["None", "0", "1"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ae323763866fe2e9c574d4fa5bc385dfa2b89a31536d02700340af994f6f779b", "warmup_time": -1}, "reduce.Time2DReductions.time_nanargmin": {"code": "class Time2DReductions:\n    def time_nanargmin(self, dtype, shape, order, axis):\n        bn.nanargmin(self.arr, axis=axis)\n\n    def setup(self, dtype, shape, order, axis):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "reduce.Time2DReductions.time_nanargmin", "number": 0, "param_names": ["dtype", "shape", "order", "axis"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["None", "0", "1"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "5b1c660540cf72bba09a486a5095159cd028023d7e483938e08439add651c0f6", "warmup_time": -1}, "reduce.Time2DReductions.time_nanmax": {"code": "class Time2DReductions:\n    def time_nanmax(self, dtype, shape, order, axis):\n        bn.nanmin(self.arr, axis=axis)\n\n    def setup(self, dtype, shape, order, axis):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "reduce.Time2DReductions.time_nanmax", "number": 0, "param_names": ["dtype", "shape", "order", "axis"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["None", "0", "1"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "4da84ebc52c082f076db07024f32adeb965d3b583bd08dea6f190ff08db076eb", "warmup_time": -1}, "reduce.Time2DReductions.time_nanmean": {"code": "class Time2DReductions:\n    def time_nanmean(self, dtype, shape, order, axis):\n        bn.nanmean(self.arr, axis=axis)\n\n    def setup(self, dtype, shape, order, axis):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "reduce.Time2DReductions.time_nanmean", "number": 0, "param_names": ["dtype", "shape", "order", "axis"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["None", "0", "1"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "fce1a2cab2cfb5cd9ad8c0fc79800f883f071dc2a3f2c0162d2356aea6f97dca", "warmup_time": -1}, "reduce.Time2DReductions.time_nanmedian": {"code": "class Time2DReductions:\n    def time_nanmedian(self, dtype, shape, order, axis):\n        bn.nanmedian(self.arr, axis=axis)\n\n    def setup(self, dtype, shape, order, axis):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "reduce.Time2DReductions.time_nanmedian", "number": 0, "param_names": ["dtype", "shape", "order", "axis"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["None", "0", "1"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "dbd95222b7523436d087f2f13ab7f4893c9f9c641c5fc965b4f80c1acfb70584", "warmup_time": -1}, "reduce.Time2DReductions.time_nanmin": {"code": "class Time2DReductions:\n    def time_nanmin(self, dtype, shape, order, axis):\n        bn.nanmin(self.arr, axis=axis)\n\n    def setup(self, dtype, shape, order, axis):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "reduce.Time2DReductions.time_nanmin", "number": 0, "param_names": ["dtype", "shape", "order", "axis"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["None", "0", "1"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "41e1d99eb9c7a4550df1b38a49ce46f95b812c70064e5c424736e75030f07b02", "warmup_time": -1}, "reduce.Time2DReductions.time_nanstd": {"code": "class Time2DReductions:\n    def time_nanstd(self, dtype, shape, order, axis):\n        bn.nanstd(self.arr, axis=axis)\n\n    def setup(self, dtype, shape, order, axis):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "reduce.Time2DReductions.time_nanstd", "number": 0, "param_names": ["dtype", "shape", "order", "axis"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["None", "0", "1"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "a73f2dc29766b4250ccd41caaccaa9a3460909dbdf1504a0d5d3705c888cbae5", "warmup_time": -1}, "reduce.Time2DReductions.time_nansum": {"code": "class Time2DReductions:\n    def time_nansum(self, dtype, shape, order, axis):\n        bn.nansum(self.arr, axis=axis)\n\n    def setup(self, dtype, shape, order, axis):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "reduce.Time2DReductions.time_nansum", "number": 0, "param_names": ["dtype", "shape", "order", "axis"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["None", "0", "1"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "07bbab0b09f0be0a24f6ddb6141b437ad53e0588fb3c73feac93838e64c2fb40", "warmup_time": -1}, "reduce.Time2DReductions.time_nanvar": {"code": "class Time2DReductions:\n    def time_nanvar(self, dtype, shape, order, axis):\n        bn.nanvar(self.arr, axis=axis)\n\n    def setup(self, dtype, shape, order, axis):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "reduce.Time2DReductions.time_nanvar", "number": 0, "param_names": ["dtype", "shape", "order", "axis"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["None", "0", "1"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "dae6021a2ad683ba75d23a593a5b1ecf70bc4df8303639fb82580dce2265f27b", "warmup_time": -1}, "reduce.Time2DReductions.time_ss": {"code": "class Time2DReductions:\n    def time_ss(self, dtype, shape, order, axis):\n        bn.ss(self.arr, axis=axis)\n\n    def setup(self, dtype, shape, order, axis):\n        self.arr = get_cached_rand_array(shape, dtype, order)", "min_run_count": 2, "name": "reduce.Time2DReductions.time_ss", "number": 0, "param_names": ["dtype", "shape", "order", "axis"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["None", "0", "1"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "740c07af51b4f2faaaab7795b25b6d5c2bf3e04e699f4fc921d2ae77d537706c", "warmup_time": -1}, "reduce.TimeAllNan2D.time_allnan": {"code": "class TimeAllNan2D:\n    def time_allnan(self, dtype, shape, order, axis, case):\n        bn.allnan(self.arr, axis=axis)\n\n    def setup(self, dtype, shape, order, axis, case):\n        self.arr = np.full(shape, 0, dtype=dtype, order=order)\n    \n        if \"float\" in dtype:\n            if case == \"slow\":\n                self.arr[:] = np.nan\n    \n        assert self.arr.flags[order + \"_CONTIGUOUS\"]", "min_run_count": 2, "name": "reduce.TimeAllNan2D.time_allnan", "number": 0, "param_names": ["dtype", "shape", "order", "axis", "case"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["None", "0", "1"], ["'fast'", "'slow'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "b2eccae2dd96056689a23e02f62badb7f526a059d59ee6904461c9a54bc98ccf", "warmup_time": -1}, "reduce.TimeAnyNan2D.time_anynan": {"code": "class TimeAnyNan2D:\n    def time_anynan(self, dtype, shape, order, axis, case):\n        bn.anynan(self.arr, axis=axis)\n\n    def setup(self, dtype, shape, order, axis, case):\n        self.arr = np.full(shape, 0, dtype=dtype, order=order)\n    \n        if \"float\" in dtype:\n            if case == \"fast\":\n                self.arr[:] = np.nan\n    \n        assert self.arr.flags[order + \"_CONTIGUOUS\"]", "min_run_count": 2, "name": "reduce.TimeAnyNan2D.time_anynan", "number": 0, "param_names": ["dtype", "shape", "order", "axis", "case"], "params": [["'int32'", "'int64'", "'float32'", "'float64'"], ["(1000, 1000)"], ["'C'", "'F'"], ["None", "0", "1"], ["'fast'", "'slow'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "44e0c94b3321402ceda097c6788b8859336e0bbfd59e39cda70dd29b930211ce", "warmup_time": -1}}, "machines": {"T470": {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-7500U CPU @ 2.70GHz", "machine": "T470", "num_cpu": "4", "os": "Linux 5.3.0-24-generic", "ram": "20261336", "version": 1}}, "tags": {"v0.1.0": 40, "v0.2.0": 74, "v0.3.0": 103, "v0.4.0": 116, "v0.4.1": 118, "v0.4.2": 119, "v0.4.3": 127, "v0.5.0": 158, "v0.5.0beta": 150, "v0.5.0beta2": 151, "v0.5.0rc1": 153, "v0.5.0rc2": 156, "v0.5.0rc3": 157, "v0.6.0": 202, "v0.6rc1": 197, "v0.7.0": 244, "v0.8.0": 264, "v1.0.0": 491, "v1.1.0": 712, "v1.2.0": 980, "v1.2.1": 1011, "v1.3.0": 1346, "v1.3.0.dev0": 1012, "v1.3.0rc1": 1337, "v1.3.0rc2": 1342, "v1.3.1": 1349, "v1.3.2": 1526, "v1.4.0.dev0": 1352}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}